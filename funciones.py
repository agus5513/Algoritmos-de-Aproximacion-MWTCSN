import itertools
from itertools import combinations
import math
from math import inf
import networkx as nx
import numpy as np
import matplotlib.pyplot as plt
from itertools import permutations
from collections import deque
import pandas as pd
from scipy.optimize import linear_sum_assignment
from typing import List, Union
import time

def tiempo(func, *args, **kwargs):
    start = time.perf_counter()
    func(*args, **kwargs)
    end = time.perf_counter()
    return end - start

def TSPFuerzaBruta(matriz):
    n = len(matriz)
    nodos_restantes = list(range(1, n))
    costo_minimo = float('inf')
    mejor_ciclo = None 
    for p in permutations(nodos_restantes):
        ciclo = [0] + list(p) + [0]
        costo = 0
        for j in range(len(ciclo) - 1):
            costo += matriz[ciclo[j], ciclo[j+1]]
        if costo < costo_minimo:
            mejor_ciclo = ciclo[:-1]
            costo_minimo = costo
    return (costo_minimo, mejor_ciclo)

def Christofides(c):
    n = len(c)
    V = list(range(n))
    # Paso 1: Construir el Árbol de Expansión Mínima (MST)
    T = construir_MST(V, c)
    # Paso 2: Encontrar vértices de grado impar en el MST
    V_impar = encontrar_vertices_impar(T)
    # Paso 3: Encontrar el emparejamiento perfecto mínimo en el subgrafo inducido
    M = emparejamiento_minimo(V_impar, c) 
    # Paso 4: Combinar MST y emparejamiento para crear un grafo euleriano
    grafo_euleriano = combinar_grafos(T, M) 
    # Paso 5: Encontrar tour euleriano
    tour_euleriano = encontrar_tour_euleriano(grafo_euleriano)
    # Paso 6: Aplicar shortcuts para obtener ciclo hamiltoniano
    ciclo_hamiltoniano = aplicar_shortcuts(tour_euleriano) 
    # Calcular costo total del ciclo
    costo_total = calcular_costo_ciclo(ciclo_hamiltoniano, c)
    return ciclo_hamiltoniano, costo_total

def construir_MST(V, c):
    n = len(V)
    G = nx.Graph()
    for i in range(n):
        for j in range(i + 1, n):
            G.add_edge(i, j, weight=c[i, j]) 
    T = nx.minimum_spanning_tree(G)
    return T

def encontrar_vertices_impar(T):
    vertices_impar = []
    for node in T.nodes():
        if T.degree(node) % 2 == 1:
            vertices_impar.append(node)
    return vertices_impar

def emparejamiento_minimo(V_impar, c):
    """
    Implementa el Emparejamiento Perfecto de Costo Mínimo (MWM) 
    utilizando el algoritmo de Blossom de Edmonds nativo de NetworkX 
    mediante la función min_weight_matching().
    """
    if not V_impar:
        return []
        
    # 1. Construir el subgrafo inducido por V_impar
    G_impar = nx.Graph()
    G_impar.add_nodes_from(V_impar)
    
    for i in range(len(V_impar)):
        for j in range(i + 1, len(V_impar)):
            u, v = V_impar[i], V_impar[j]
            # Usamos el peso ORIGINAL, ya que min_weight_matching busca la minimización.
            G_impar.add_edge(u, v, weight=c[u, v])
            
    # 2. Llamada al Algoritmo de Blossom a través de NetworkX:
    # min_weight_matching encuentra por defecto el de máxima cardinalidad y
    # mínimo peso entre ellos, que es el Emparejamiento Perfecto de Costo Mínimo.
    matching_set = nx.algorithms.matching.min_weight_matching(
        G_impar, 
        weight='weight'
    )
    
    # 3. Formatear la salida (convierte el set de tuplas en una lista)
    M = list(matching_set)
            
    return M

def combinar_grafos(T, M):
    grafo_combinado = nx.MultiGraph()
    for u, v in T.edges():
        grafo_combinado.add_edge(u, v)
    for u, v in M:
        grafo_combinado.add_edge(u, v) 
    return grafo_combinado

def encontrar_tour_euleriano(grafo):
    try:
        return list(nx.eulerian_circuit(grafo))
    except nx.NetworkXError as e:
        return []

def aplicar_shortcuts(tour_euleriano):
    visitados = set()
    ciclo_hamiltoniano = []
    for u, v in tour_euleriano:
        if u not in visitados:
            ciclo_hamiltoniano.append(u)
            visitados.add(u)
    if ciclo_hamiltoniano and ciclo_hamiltoniano[0] != ciclo_hamiltoniano[-1]:
        ciclo_hamiltoniano.append(ciclo_hamiltoniano[0])  
    return ciclo_hamiltoniano

def calcular_costo_ciclo(ciclo, c):
    if len(ciclo) <= 1:
        return 0
    costo = 0
    for i in range(len(ciclo) - 1):
        u, v = ciclo[i], ciclo[i + 1]
        costo += c[u, v] 
    return costo

def CrearMatrizRandom(n):
    matriz = np.random.randint(1, 20, size=(n, n))
    matriz = (matriz + matriz.T) / 2
    np.fill_diagonal(matriz, 0)
    return matriz.astype(int)

def CrearGrafoMetricoRandom(n):
    puntos = []
    for _ in range(n):
        x = np.random.uniform(-10, 10)
        y = np.random.uniform(-10, 10)
        puntos.append((x, y))
    matriz = np.zeros((n, n))
    for i in range(n):
        for j in range(n):
            if i == j:
                matriz[i, j] = 0
            else:
                x1, y1 = puntos[i]
                x2, y2 = puntos[j]
                distancia = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
                matriz[i, j] = distancia
    return matriz

def edges_from_cost_matrix(C):
    """Devuelve lista de aristas (i,j,costo) con i<j y costo < inf."""
    n = C.shape[0]
    edges = []
    for i in range(n):
        for j in range(i+1, n):
            w = C[i, j]
            if np.isfinite(w):
                edges.append((i, j, float(w)))
    return edges

def MWTCSNFuerzaBruta(C):
    n = C.shape[0]
    edges = edges_from_cost_matrix(C)
    m = len(edges)

    best_cost = np.inf
    best_subset = None

    # iteramos por número de aristas, desde n (mínimo para 2-conexo) hasta m
    for k in range(n, m+1):
        for comb in combinations(edges, k):
            cost = sum(e[2] for e in comb)
            if cost >= best_cost:
                continue  # poda por coste
            # construimos grafo con networkx
            G = nx.Graph()
            G.add_nodes_from(range(n))
            for (u, v, w) in comb:
                G.add_edge(u, v, weight=w)
            # chequeo rápido de grado
            if any(deg < 2 for _, deg in G.degree()):
                continue
            # chequeo 2-conexidad
            if nx.is_biconnected(G):
                best_cost = cost
                best_subset = comb

    if best_subset is None:
        return None, None, None

    # construir matriz de adyacencia con costes en numpy
    adj_matrix = np.full((n, n), np.inf)
    np.fill_diagonal(adj_matrix, 0.0)
    for (u, v, w) in best_subset:
        adj_matrix[u, v] = w
        adj_matrix[v, u] = w

    return best_subset, best_cost, adj_matrix

# Lista de capitales, Coordenadas, Funciones Geográficas y Matriz A1 (sin cambios)
nodes = [
    "Artigas","Canelones","Colonia","Durazno","Florida","Fray Bentos","Maldonado",
    "Melo","Mercedes","Minas","Montevideo","Paysandú","Rivera","Rocha","Salto",
    "San José","Tacuarembó","Treinta y Tres","Trinidad"
]

coords = {
    "Artigas": (-30.4006, -56.5078),  #0
    "Canelones": (-34.4628, -56.2833),
    "Colonia": (-34.4608, -57.8336), #2
    "Durazno": (-33.3986, -56.5097),
    "Florida": (-33.0072, -56.2078), #4
    "Fray Bentos": (-33.1506, -58.2499),
    "Maldonado": (-34.9006, -54.9506), #6
    "Melo": (-32.3667, -54.1833),
    "Mercedes": (-33.2472, -58.0256), #8
    "Minas": (-34.3708, -54.3361),
    "Montevideo": (-34.9011, -56.1645), #10
    "Paysandú": (-32.3258, -58.0753),
    "Rivera": (-30.9001, -55.5478), #12
    "Rocha": (-34.4833, -54.3333),
    "Salto": (-31.3853, -57.9689), #14
    "San José": (-34.3333, -56.7167),
    "Tacuarembó": (-31.7246, -55.9857), #16
    "Treinta y Tres": (-33.2308, -54.3833),
    "Trinidad": (-33.5167, -56.8833) #18
}

def haversine(coord1, coord2):
    R = 6371.0
    lat1, lon1 = coord1
    lat2, lon2 = coord2
    φ1, φ2 = math.radians(lat1), math.radians(lat2)
    Δφ = math.radians(lat2 - lat1)
    Δλ = math.radians(lon2 - lon1)
    a = math.sin(Δφ/2)**2 + math.cos(φ1) * math.cos(φ2) * math.sin(Δλ/2)**2
    return 2 * R * math.asin(math.sqrt(a))

def MatrizUruguaya():
    n = len(nodes)
    D = np.zeros((n, n))
    for i in range(n):
        for j in range(n):
            D[i, j] = round(haversine(coords[nodes[i]], coords[nodes[j]]), 3)
    return D

#Solucion Christofides en Matriz Uruguaya:
#[0, 14, 11, 5, 8, 18, 7, 17, 9, 13, 6, 10, 1, 15, 2, 3, 4, 16, 12, 0] con valor 1982.2


#Monma_k=2
D = np.array([
    [0, 1, 1, 1, 2, 2, 2, 3],  # Desde nodo 1
    [1, 0, 2, 2, 3, 3, 1, 2],  # Desde nodo 2
    [1, 2, 0, 2, 3, 1, 3, 2],  # Desde nodo 3
    [1, 2, 2, 0, 1, 3, 3, 2],  # Desde nodo 4
    [2, 3, 3, 1, 0, 2, 2, 1],  # Desde nodo 5
    [2, 3, 1, 3, 2, 0, 2, 1],  # Desde nodo 6
    [2, 1, 3, 3, 2, 2, 0, 1],  # Desde nodo 7
    [3, 2, 2, 2, 1, 1, 1, 0]   # Desde nodo 8
])

E = np.array([
    [0,1,1,1,2],
    [1,0,2,2,1],
    [1,2,0,2,1],
    [1,2,2,0,1],
    [2,1,1,1,0],
])

# Matriz de distancias para brazil58 (58 ciudades de Brasil)
brazil58 = np.array([
    [0, 2635, 2713, 2437, 1600, 2845, 6002, 1743, 594, 2182, 2906, 1658, 464, 3334, 3987, 2870, 2601, 330, 3049, 1302, 3399, 1946, 1278, 669, 627, 2878, 1737, 3124, 2878, 307, 5217, 799, 3305, 3716, 2251, 2878, 3467, 4316, 2963, 512, 2515, 4850, 1937, 367, 3601, 3936, 2430, 2691, 2087, 1861, 2358, 2263, 1425, 2266, 2166, 3870, 1417, 739],
    [2635, 0, 314, 2636, 666, 1096, 4645, 693, 2889, 287, 772, 1135, 2875, 1424, 2185, 1193, 846, 2142, 1127, 3104, 1484, 490, 990, 1950, 2855, 975, 926, 1214, 599, 2535, 3860, 3027, 1407, 1811, 359, 1060, 1557, 2959, 394, 2740, 98, 3538, 856, 2026, 1710, 1733, 508, 194, 532, 2906, 435, 335, 2470, 137, 234, 2072, 1196, 1517],
    [2713, 314, 0, 2730, 706, 791, 4588, 922, 2991, 217, 760, 1050, 2915, 1119, 1776, 1451, 5410, 2182, 846, 3333, 578, 721, 1030, 1990, 2895, 670, 835, 909, 287, 2575, 3803, 3067, 1102, 1505, 158, 439, 1248, 2902, 287, 2780, 276, 3436, 771, 2066, 1395, 1740, 407, 279, 334, 3135, 337, 235, 2699, 451, 546, 1882, 2699, 1557],
    [2437, 2636, 2730, 0, 2824, 3457, 6083, 2120, 2040, 2844, 2973, 3937, 1958, 3710, 4363, 2941, 3207, 1991, 3512, 1571, 3392, 2013, 2922, 2368, 2170, 3336, 3503, 3500, 2884, 2109, 5298, 2108, 3643, 4092, 2934, 3093, 3843, 4391, 2763, 2083, 2543, 4925, 3236, 2107, 3939, 4274, 3008, 2522, 3006, 806, 2936, 3026, 947, 2464, 2364, 4208, 3116, 2390],
    [1600, 666, 706, 2824, 0, 1247, 4746, 716, 2223, 584, 1442, 694, 2089, 1577, 2230, 1609, 1003, 1260, 1297, 2535, 1511, 908, 324, 1116, 2183, 1126, 260, 1367, 996, 1863, 3961, 2355, 1565, 1959, 660, 1106, 1710, 3060, 991, 2068, 523, 3594, 434, 1354, 1861, 2196, 658, 750, 563, 2929, 586, 668, 2493, 494, 557, 2130, 524, 851],
    [2845, 1096, 791, 3457, 1247, 0, 5126, 1653, 3545, 708, 1298, 1342, 3451, 347, 1126, 1989, 250, 2736, 138, 3786, 888, 1452, 1671, 2336, 3431, 124, 1165, 189, 640, 3110, 4341, 3603, 489, 855, 730, 364, 598, 3440, 841, 3316, 919, 3974, 1063, 2620, 940, 1090, 722, 921, 761, 3866, 652, 754, 3430, 1096, 1191, 1232, 1582, 2098],
    [6002, 4645, 4588, 6083, 4746, 5126, 0, 4267, 6553, 4826, 3830, 5951, 6417, 5423, 6089, 3142, 4876, 5676, 5181, 6678, 4720, 4074, 5071, 5724, 6675, 5000, 4993, 5221, 4494, 6265, 785, 6776, 5265, 5756, 4628, 4747, 5511, 1686, 4276, 6472, 4447, 2230, 5167, 5784, 5561, 5891, 4902, 4353, 4922, 6480, 4759, 4771, 6044, 4299, 4199, 5830, 5271, 5404],
    [1743, 693, 922, 2120, 716, 1653, 4267, 0, 2296, 923, 1175, 1282, 2162, 1906, 2559, 1133, 1352, 1422, 1651, 2423, 1588, 209, 1030, 1461, 2420, 1538, 965, 1716, 1112, 2010, 3482, 2521, 1839, 2288, 1000, 1289, 2039, 2551, 955, 2217, 715, 3125, 1145, 1529, 2131, 2466, 1087, 718, 1083, 2225, 1015, 960, 1789, 537, 436, 2400, 1238, 1199],
    [594, 2889, 2991, 2040, 2223, 3545, 6553, 2296, 0, 2869, 3459, 2366, 147, 3741, 4399, 3417, 3163, 924, 3462, 681, 3734, 2493, 1934, 1377, 130, 3402, 2449, 3531, 3219, 343, 5766, 228, 3724, 4128, 2883, 3277, 3870, 4835, 3214, 184, 2746, 4875, 2492, 925, 4017, 4362, 2985, 2973, 2831, 1544, 2913, 2891, 1103, 2717, 2655, 4504, 1972, 1447],
    [2182, 287, 217, 2844, 584, 708, 4826, 923, 2869, 0, 1004, 781, 2793, 1036, 1694, 1694, 458, 1844, 757, 3125, 1096, 827, 908, 1702, 2773, 587, 844, 826, 455, 2453, 4041, 2945, 1019, 1423, 75, 572, 1165, 3140, 560, 2658, 227, 3674, 502, 1944, 1312, 1650, 170, 383, 169, 3136, 98, 80, 2700, 411, 508, 1584, 948, 1435],
    [2906, 772, 760, 2973, 1442, 1298, 3830, 1175, 3459, 1004, 0, 2128, 3322, 1609, 2266, 693, 1041, 2585, 1353, 3586, 887, 974, 2553, 2624, 3583, 1177, 1488, 1398, 673, 3173, 3045, 3684, 1444, 1935, 941, 926, 1686, 2149, 455, 3380, 894, 2688, 1433, 2692, 1740, 2070, 1081, 696, 1101, 3388, 1009, 950, 2952, 1063, 964, 2009, 1972, 2286],
    [1658, 1135, 1050, 3937, 694, 1342, 5951, 1282, 2366, 781, 2128, 0, 2265, 1695, 2353, 2819, 1117, 1557, 1416, 2636, 1755, 1608, 456, 1002, 2245, 1246, 257, 1485, 1225, 1925, 5166, 2417, 1678, 2082, 871, 1231, 1824, 4265, 1290, 2130, 1019, 4799, 279, 1441, 1971, 2309, 772, 1148, 618, 2844, 700, 802, 2413, 1188, 1248, 2243, 248, 1210],
    [464, 2875, 2915, 1958, 2089, 3451, 6417, 2162, 147, 2793, 3322, 2265, 0, 3607, 4265, 3283, 3029, 931, 3328, 817, 3600, 2359, 1876, 1267, 200, 3158, 2339, 3397, 3120, 211, 5632, 366, 3590, 4004, 2766, 3134, 3736, 4701, 3185, 135, 2914, 5274, 2267, 815, 3883, 4221, 2667, 3043, 2606, 1451, 2595, 2697, 1011, 2563, 2623, 4155, 1834, 1337],
    [3334, 1424, 1119, 3710, 1577, 347, 5423, 1906, 3741, 1036, 1609, 1695, 3607, 0, 665, 2300, 578, 2845, 474, 4116, 1216, 1705, 1901, 2693, 3848, 652, 1480, 224, 968, 3547, 4648, 4020, 176, 394, 1153, 692, 137, 3752, 1169, 3744, 1301, 4291, 1420, 3047, 479, 629, 1059, 1249, 1079, 4119, 982, 967, 3683, 1424, 1421, 771, 1939, 2901],
    [3987, 2185, 1776, 4363, 2230, 1126, 6089, 2559, 4399, 1694, 2266, 2353, 4265, 665, 0, 2957, 1236, 3706, 992, 4774, 1471, 2358, 2654, 3346, 4589, 1177, 2151, 887, 1564, 4099, 5304, 4591, 818, 262, 1716, 1350, 528, 4408, 1827, 4306, 1905, 4947, 2073, 3590, 562, 607, 1717, 2093, 1742, 4772, 1645, 1747, 4036, 2082, 2179, 760, 2592, 3554],
    [2870, 1193, 1451, 2941, 1609, 1989, 3142, 1133, 3417, 1694, 693, 2819, 3283, 2300, 2957, 0, 1734, 2543, 2044, 3544, 1578, 932, 1939, 2582, 3304, 1868, 1861, 2089, 1362, 3131, 2357, 3642, 2133, 2624, 1491, 1615, 2379, 1456, 1144, 3338, 1310, 1990, 2035, 2650, 2429, 2759, 1770, 1216, 1790, 3346, 1622, 1639, 2910, 1162, 1062, 2698, 2139, 2278],
    [2601, 846, 5410, 3207, 1003, 250, 4876, 1352, 3163, 458, 1041, 1117, 3029, 578, 1236, 1734, 0, 2267, 300, 3542, 638, 1202, 1328, 2094, 3187, 129, 915, 368, 390, 2866, 4091, 3359, 561, 965, 480, 114, 711, 3190, 591, 3072, 669, 3724, 846, 2379, 854, 1192, 392, 671, 511, 3565, 408, 388, 3129, 846, 950, 1126, 1347, 1860],
    [330, 2142, 2182, 1991, 1260, 2736, 5676, 1422, 924, 1844, 2585, 1557, 931, 2845, 3706, 2543, 2267, 0, 2566, 1273, 2905, 1619, 1175, 564, 1068, 2600, 1638, 2841, 2470, 770, 5113, 1240, 3039, 3433, 2134, 2580, 3184, 4182, 2465, 953, 1997, 4756, 1834, 114, 3335, 3670, 2388, 2349, 1984, 1715, 2068, 2074, 1284, 1968, 2031, 3604, 1340, 636],
    [3049, 1127, 846, 3512, 1297, 138, 5181, 1651, 3462, 757, 1353, 1416, 3328, 474, 992, 2044, 300, 2566, 0, 3841, 945, 1507, 1627, 2393, 3486, 178, 1214, 254, 652, 3165, 4396, 3658, 531, 730, 1079, 374, 476, 3495, 856, 3371, 968, 4029, 1140, 2678, 806, 960, 691, 978, 810, 3864, 707, 687, 3428, 1145, 1249, 1096, 1646, 2159],
    [1302, 3104, 3333, 1571, 2535, 3786, 6678, 2423, 681, 3125, 3586, 2636, 817, 4116, 4774, 3544, 3542, 1273, 3841, 0, 3998, 2620, 2217, 1647, 693, 3665, 2676, 3906, 3487, 1052, 5893, 537, 4108, 4503, 3201, 3635, 4249, 4962, 3366, 800, 3064, 5536, 2804, 1385, 4401, 4739, 3199, 3129, 3032, 1070, 3122, 3209, 634, 2948, 2846, 4673, 2395, 1681],
    [3399, 1484, 578, 3392, 1511, 888, 4720, 1588, 3734, 1096, 887, 1755, 3600, 1216, 1471, 1578, 638, 2905, 945, 3998, 0, 1383, 1835, 2627, 3846, 767, 1771, 788, 520, 3380, 3925, 3872, 938, 1200, 842, 524, 943, 3024, 607, 3585, 892, 3558, 1470, 2871, 1288, 1438, 1118, 742, 1143, 3801, 1046, 976, 3365, 1076, 1174, 1185, 1989, 2951],
    [1946, 490, 721, 2013, 908, 1452, 4074, 209, 2493, 827, 974, 1608, 2359, 1705, 2358, 932, 1202, 1619, 1507, 2620, 1383, 0, 1238, 1612, 2617, 1332, 1174, 1495, 875, 2211, 3289, 2718, 1634, 2087, 774, 1109, 1838, 2388, 754, 2414, 607, 2922, 1348, 1726, 1930, 2265, 991, 517, 983, 2422, 919, 880, 1986, 459, 359, 2199, 1438, 1350],
    [1278, 990, 1030, 2922, 324, 1671, 5071, 1030, 1934, 908, 2553, 456, 1876, 1901, 2654, 1939, 1328, 1175, 1627, 2217, 1835, 1238, 0, 801, 1865, 1450, 554, 2243, 1546, 1545, 4286, 2037, 1889, 2293, 984, 1542, 2040, 3385, 1315, 1750, 847, 3919, 600, 1061, 2182, 2510, 1093, 1074, 887, 2425, 1021, 992, 1994, 818, 881, 2454, 432, 1394],
    [669, 1950, 1990, 2368, 1116, 2336, 5724, 1461, 1377, 1702, 2624, 1002, 1267, 2693, 3346, 2582, 2094, 564, 2393, 1647, 2627, 1612, 801, 0, 1256, 2083, 1252, 2324, 2058, 936, 4929, 1428, 2517, 2686, 1841, 2057, 2806, 4038, 2123, 1141, 1849, 4572, 1275, 452, 2805, 3143, 1610, 2020, 1612, 1869, 1542, 1642, 1422, 1748, 1811, 3082, 754, 259],
    [627, 2855, 2895, 2170, 2183, 3431, 6675, 2420, 130, 2773, 3583, 2245, 200, 3848, 4589, 3304, 3187, 1068, 3486, 693, 3846, 2617, 1865, 1256, 0, 3310, 2324, 3551, 3185, 372, 5890, 190, 3754, 4148, 2849, 3295, 3899, 4959, 3180, 125, 2712, 5533, 2524, 954, 4050, 4385, 2836, 2939, 2644, 1669, 2764, 2857, 1233, 2683, 2746, 4319, 2004, 1326],
    [2878, 975, 670, 3336, 1126, 124, 5000, 1538, 3402, 587, 1177, 1246, 3158, 652, 1177, 1868, 129, 2600, 178, 3665, 767, 1332, 1450, 2083, 3310, 0, 1044, 432, 519, 2995, 4215, 3487, 709, 908, 609, 243, 639, 3314, 720, 3200, 798, 3848, 969, 2486, 984, 1138, 528, 800, 640, 3751, 536, 517, 3315, 975, 1078, 1274, 1329, 1189],
    [1737, 926, 835, 3503, 260, 1165, 4993, 965, 2449, 844, 1488, 257, 2339, 1480, 2151, 1861, 915, 1638, 1214, 2676, 1771, 1174, 554, 1252, 2324, 1044, 0, 1275, 1023, 2004, 4208, 2496, 1468, 1637, 669, 1022, 1627, 3307, 1088, 2209, 783, 3841, 184, 1524, 1756, 2094, 570, 946, 523, 3178, 498, 600, 2742, 754, 817, 2033, 498, 1460],
    [3124, 1214, 909, 3500, 1367, 189, 5221, 1716, 3531, 826, 1398, 1485, 3397, 224, 887, 2089, 368, 2841, 254, 3906, 788, 1495, 2243, 2324, 3551, 432, 1275, 0, 758, 3236, 4436, 4225, 283, 606, 848, 482, 359, 3535, 959, 3441, 1037, 4069, 1210, 2727, 701, 851, 702, 1039, 879, 3929, 777, 756, 3493, 1214, 1311, 1494, 1570, 2532],
    [2878, 599, 287, 2884, 996, 640, 4494, 1112, 3219, 455, 673, 1225, 3120, 968, 1564, 1362, 390, 2470, 652, 3487, 520, 875, 1546, 2058, 3185, 519, 1023, 758, 0, 2865, 3709, 3036, 478, 1293, 354, 274, 1036, 2808, 366, 3070, 447, 3342, 949, 2356, 708, 837, 577, 367, 623, 3325, 525, 523, 2889, 631, 728, 1635, 1304, 2266],
    [307, 2535, 2575, 2109, 1863, 3110, 6265, 2010, 343, 2453, 3173, 1925, 211, 3547, 4099, 3131, 2866, 770, 3165, 1052, 3380, 2211, 1545, 936, 372, 2995, 2004, 3236, 2865, 0, 5480, 549, 3434, 3828, 2529, 2975, 3579, 4549, 2860, 257, 2392, 5123, 2204, 656, 3730, 4065, 2527, 2619, 2354, 1608, 2444, 2537, 1172, 2406, 2305, 3999, 1684, 1006],
    [5217, 3860, 3803, 5298, 3961, 4341, 785, 3482, 5766, 4041, 3045, 5166, 5632, 4648, 5304, 2357, 4091, 5113, 4396, 5893, 3925, 3289, 4286, 4929, 5890, 4215, 4208, 4436, 3709, 5480, 0, 5991, 4480, 4971, 3843, 3962, 4791, 901, 3491, 5687, 3662, 1445, 4615, 4999, 4776, 5106, 4117, 3568, 4137, 5695, 3969, 3986, 5259, 3514, 3414, 5045, 4708, 4619],
    [799, 3027, 3067, 2108, 2355, 3603, 6776, 2521, 228, 2945, 3684, 2417, 366, 4020, 4591, 3642, 3359, 1240, 3658, 537, 3872, 2718, 2037, 1428, 190, 3487, 2496, 4225, 3036, 549, 5991, 0, 3926, 4320, 3021, 3467, 4171, 5060, 3352, 297, 2884, 5634, 2696, 1126, 4222, 4557, 3008, 3114, 2846, 1607, 2936, 3162, 1171, 2855, 2918, 4491, 2176, 1498],
    [3305, 1407, 1102, 3643, 1565, 489, 5265, 1839, 3724, 1019, 1444, 1678, 3590, 176, 818, 2133, 561, 3039, 531, 4108, 938, 1634, 1889, 2517, 3754, 709, 1468, 283, 478, 3434, 4480, 3926, 0, 547, 1041, 675, 290, 3579, 1152, 3639, 1230, 4113, 1402, 2925, 213, 435, 802, 1232, 1072, 4052, 970, 949, 3616, 1407, 1511, 413, 1763, 2725],
    [3716, 1811, 1505, 4092, 1959, 855, 5756, 2288, 4128, 1423, 1935, 2082, 4004, 394, 262, 2624, 965, 3433, 730, 4503, 1200, 2087, 2293, 2686, 4148, 908, 1637, 606, 1293, 3828, 4971, 4320, 547, 0, 1444, 1016, 257, 4002, 1493, 4041, 1638, 4604, 1802, 3319, 354, 229, 1356, 1849, 1475, 4501, 1139, 1352, 4065, 1839, 1931, 300, 1932, 2899],
    [2251, 359, 158, 2934, 660, 730, 4628, 1000, 2883, 75, 941, 871, 2766, 1153, 1716, 1491, 480, 2134, 1079, 3201, 842, 774, 984, 1841, 2849, 609, 669, 848, 354, 2529, 3843, 3021, 1041, 1444, 0, 594, 1187, 2942, 329, 2734, 148, 3476, 567, 2020, 1335, 1672, 243, 287, 268, 3213, 171, 107, 2777, 315, 419, 1606, 1087, 2049],
    [2878, 1060, 439, 3093, 1106, 364, 4747, 1289, 3277, 572, 926, 1231, 3134, 692, 1350, 1615, 114, 2580, 374, 3635, 524, 1109, 1542, 2057, 3295, 243, 1022, 482, 274, 2975, 3962, 3467, 675, 1016, 594, 0, 759, 3061, 705, 3180, 635, 3595, 971, 2466, 968, 1306, 506, 705, 625, 3502, 524, 502, 3066, 960, 1064, 1240, 1303, 1974],
    [3467, 1557, 1248, 3843, 1710, 598, 5511, 2039, 3870, 1165, 1686, 1824, 3736, 137, 528, 2379, 711, 3184, 476, 4249, 943, 1838, 2040, 2806, 3899, 639, 1627, 359, 1036, 3579, 4791, 4171, 290, 257, 1187, 759, 0, 3825, 1236, 3784, 1381, 4359, 1553, 3070, 342, 492, 1099, 1592, 1218, 4252, 1115, 1095, 3816, 1560, 1672, 634, 1908, 2570],
    [4316, 2959, 2902, 4391, 3060, 3440, 1686, 2551, 4835, 3140, 2149, 4265, 4701, 3752, 4408, 1456, 3190, 4182, 3495, 4962, 3024, 2388, 3385, 4038, 4959, 3314, 3307, 3535, 2808, 4549, 901, 5060, 3579, 4002, 2942, 3061, 3825, 0, 2590, 4848, 2761, 544, 3481, 4068, 3875, 4505, 3145, 2667, 3236, 4764, 3073, 3083, 4328, 2613, 2513, 4144, 3590, 3718],
    [2963, 394, 287, 2763, 991, 841, 4276, 955, 3214, 560, 455, 1290, 3185, 1169, 1827, 1144, 591, 2465, 856, 3366, 607, 754, 1315, 2123, 3180, 720, 1088, 959, 366, 2860, 3491, 3352, 1152, 1493, 329, 705, 1236, 2590, 0, 3065, 432, 3124, 1014, 2351, 1445, 1783, 602, 345, 688, 3168, 590, 488, 2732, 498, 589, 1717, 1369, 2331],
    [512, 2740, 2780, 2083, 2068, 3316, 6472, 2217, 184, 2658, 3380, 2130, 135, 3744, 4306, 3338, 3072, 953, 3371, 800, 3585, 2414, 1750, 1141, 125, 3200, 2209, 3441, 3070, 257, 5687, 297, 3639, 4041, 2734, 3180, 3784, 4848, 3065, 0, 2597, 5330, 2409, 839, 3935, 4270, 2721, 2923, 2559, 1582, 2649, 2753, 1146, 2568, 2651, 4204, 1889, 1211],
    [2515, 98, 276, 2543, 523, 919, 4447, 715, 2746, 227, 894, 1019, 2914, 1301, 1905, 1310, 669, 1997, 968, 3064, 892, 607, 847, 1849, 2712, 798, 783, 1037, 447, 2392, 3662, 2884, 1230, 1638, 148, 635, 1381, 2761, 432, 2597, 0, 3294, 722, 1883, 1423, 1783, 391, 192, 416, 2928, 319, 217, 2492, 184, 282, 1795, 1095, 2042],
    [4850, 3538, 3436, 4925, 3594, 3974, 2230, 3125, 4875, 3674, 2688, 4799, 5274, 4291, 4947, 1990, 3724, 4756, 4029, 5536, 3558, 2922, 3919, 4572, 5533, 3848, 3841, 4069, 3342, 5123, 1445, 5634, 4113, 4604, 3476, 3595, 4359, 544, 3124, 5330, 3294, 0, 4015, 4642, 4409, 4739, 3750, 3201, 3770, 5338, 3607, 3617, 4902, 3147, 3047, 4678, 4124, 4252],
    [1937, 856, 771, 3236, 434, 1063, 5167, 1145, 2492, 502, 1433, 279, 2267, 1420, 2073, 2035, 846, 1834, 1140, 2804, 1470, 1348, 600, 1275, 2524, 969, 184, 1210, 949, 2204, 4615, 2696, 1402, 1802, 567, 971, 1553, 3481, 1014, 2409, 722, 4015, 0, 1720, 1698, 2037, 554, 852, 339, 3004, 429, 533, 2571, 889, 993, 1967, 527, 1123],
    [367, 2026, 2066, 2107, 1354, 2620, 5784, 1529, 925, 1944, 2692, 1441, 815, 3047, 3590, 2650, 2379, 114, 2678, 1385, 2871, 1726, 1061, 452, 954, 2486, 1524, 2727, 2356, 656, 4999, 1126, 2925, 3319, 2020, 2466, 3070, 4068, 2351, 839, 1883, 4642, 1720, 0, 3221, 3556, 2274, 2235, 1870, 1601, 1954, 1960, 1170, 1854, 1917, 3490, 1226, 522],
    [3601, 1710, 1395, 3939, 1861, 940, 5561, 2131, 4017, 1312, 1740, 1971, 3883, 479, 562, 2429, 854, 3335, 806, 4401, 1288, 1930, 2182, 2805, 4050, 984, 1756, 701, 708, 3730, 4776, 4222, 213, 354, 1335, 968, 342, 3875, 1445, 3935, 1423, 4409, 1698, 3221, 0, 273, 1340, 1525, 1355, 4344, 1258, 942, 3908, 1700, 1798, 312, 2051, 3033],
    [3936, 1733, 1740, 4274, 2196, 1090, 5891, 2466, 4362, 1650, 2070, 2309, 4221, 629, 607, 2759, 1192, 3670, 960, 4739, 1438, 2265, 2510, 3143, 4385, 1138, 2094, 851, 837, 4065, 5106, 4557, 435, 229, 1672, 1306, 492, 4505, 1783, 4270, 1783, 4739, 2037, 3556, 273, 0, 1668, 1863, 1693, 4679, 1596, 1580, 4243, 2038, 2134, 254, 2389, 3351],
    [2430, 508, 407, 3008, 658, 722, 4902, 1087, 2985, 170, 1081, 772, 2667, 1059, 1717, 1770, 392, 2388, 691, 3199, 1118, 991, 1093, 1610, 2836, 528, 570, 702, 577, 2527, 4117, 3008, 802, 1356, 243, 506, 1099, 3145, 602, 2721, 391, 3750, 554, 2274, 1340, 1668, 0, 520, 86, 3299, 72, 170, 2864, 558, 662, 1489, 856, 1434],
    [2691, 194, 279, 2522, 750, 921, 4353, 718, 2973, 383, 696, 1148, 3043, 1249, 2093, 1216, 671, 2349, 978, 3129, 742, 517, 1074, 2020, 2939, 800, 946, 1039, 367, 2619, 3568, 3114, 1232, 1849, 287, 705, 1592, 2667, 345, 2923, 192, 3201, 852, 2235, 1525, 1863, 520, 0, 543, 2931, 448, 342, 2495, 239, 288, 1797, 1266, 1878],
    [2087, 532, 334, 3006, 563, 761, 4922, 1083, 2831, 169, 1101, 618, 2606, 1079, 1742, 1790, 511, 1984, 810, 3032, 1143, 983, 887, 1612, 2644, 640, 523, 879, 623, 2354, 4137, 2846, 1072, 1475, 268, 625, 1218, 3236, 688, 2559, 416, 3770, 339, 1870, 1355, 1693, 86, 543, 0, 3295, 97, 199, 2859, 588, 692, 1637, 858, 1339],
    [1861, 2906, 3135, 806, 2929, 3866, 6480, 2225, 1544, 3136, 3388, 2844, 1451, 4119, 4772, 3346, 3565, 1715, 3864, 1070, 3801, 2422, 2425, 1869, 1669, 3751, 3178, 3929, 3325, 1608, 5695, 1607, 4052, 4501, 3213, 3502, 4252, 4764, 3168, 1582, 2928, 5338, 3004, 1601, 4344, 4679, 3299, 2931, 3295, 0, 3227, 3206, 446, 2750, 2649, 4617, 2417, 1882],
    [2358, 435, 337, 2936, 586, 652, 4759, 1015, 2913, 98, 1009, 700, 2595, 982, 1645, 1622, 408, 2068, 707, 3122, 1046, 919, 1021, 1542, 2764, 536, 498, 777, 525, 2444, 3969, 2936, 970, 1139, 171, 524, 1115, 3073, 590, 2649, 319, 3607, 429, 1954, 1258, 1596, 72, 448, 97, 3227, 0, 102, 2791, 486, 590, 1535, 8700, 1441],
    [2263, 335, 235, 3026, 668, 754, 4771, 960, 2891, 80, 950, 802, 2697, 967, 1747, 1639, 388, 2074, 687, 3209, 976, 880, 992, 1642, 2857, 517, 600, 756, 523, 2537, 3986, 3162, 949, 1352, 107, 502, 1095, 3083, 488, 2753, 217, 3617, 533, 1960, 942, 1580, 170, 342, 199, 3206, 102, 0, 2770, 389, 497, 1514, 888, 1543],
    [1425, 2470, 2699, 947, 2493, 3430, 6044, 1789, 1103, 2700, 2952, 2413, 1011, 3683, 4036, 2910, 3129, 1284, 3428, 634, 3365, 1986, 1994, 1422, 1233, 3315, 2742, 3493, 2889, 1172, 5259, 1171, 3616, 4065, 2777, 3066, 3816, 4328, 2732, 1146, 2492, 4902, 2571, 1170, 3908, 4243, 2864, 2495, 2859, 446, 2791, 2770, 0, 2314, 2213, 4181, 2105, 1446],
    [2266, 137, 451, 2464, 494, 1096, 4299, 537, 2717, 411, 1063, 1188, 2563, 1424, 2082, 1162, 846, 1968, 1145, 2948, 1076, 459, 818, 1748, 2683, 975, 754, 1214, 631, 2406, 3514, 2855, 1407, 1839, 315, 960, 1560, 2613, 498, 2568, 184, 3147, 889, 1854, 1700, 2038, 558, 239, 588, 2750, 486, 389, 2314, 0, 112, 1972, 994, 1345],
    [2166, 234, 546, 2364, 557, 1191, 4199, 436, 2655, 508, 964, 1248, 2623, 1421, 2179, 1062, 950, 2031, 1249, 2846, 1174, 359, 881, 1811, 2746, 1078, 817, 1311, 728, 2305, 3414, 2918, 1511, 1931, 419, 1064, 1672, 2513, 589, 2651, 282, 3047, 993, 1917, 1798, 2134, 662, 288, 692, 2649, 590, 497, 2213, 112, 0, 2076, 1057, 1408],
    [3870, 2072, 1882, 4208, 2130, 1232, 5830, 2400, 4504, 1584, 2009, 2243, 4155, 771, 760, 2698, 1126, 3604, 1096, 4673, 1185, 2199, 2454, 3082, 4319, 1274, 2033, 1494, 1635, 3999, 5045, 4491, 413, 300, 1606, 1240, 634, 4144, 1717, 4204, 1795, 4678, 1967, 3490, 312, 254, 1489, 1797, 1637, 4617, 1535, 1514, 4181, 1972, 2076, 0, 2328, 2986],
    [1417, 1196, 2699, 3116, 524, 1582, 5271, 1238, 1972, 948, 1972, 248, 1834, 1939, 2592, 2139, 1347, 1340, 1646, 2395, 1989, 1438, 432, 754, 2004, 1329, 498, 1570, 1304, 1684, 4708, 2176, 1763, 1932, 1087, 1303, 1908, 3590, 1369, 1889, 1095, 4124, 527, 1226, 2051, 2389, 856, 1266, 858, 2417, 8700, 888, 2105, 994, 1057, 2328, 0, 962],
    [739, 1517, 1557, 2390, 851, 2098, 5404, 1199, 1447, 1435, 2286, 1210, 1337, 2901, 3554, 2278, 1860, 636, 2159, 1681, 2951, 1350, 1394, 259, 1326, 1189, 1460, 2532, 2266, 1006, 4619, 1498, 2725, 2899, 2049, 1974, 2570, 3718, 2331, 1211, 2042, 4252, 1123, 522, 3033, 3351, 1434, 1878, 1339, 1882, 1441, 1543, 1446, 1345, 1408, 2986, 962, 0]
])



def DSJ():
    matriz = np.zeros((1000, 1000))
    puntos = parse_coordinates(coord_string)
    for i in range(1000):
        for j in range(1000):
            if i == j:
                matriz[i, j] = 0
            else:
                x1, y1 = puntos[i]
                x2, y2 = puntos[j]
                distancia = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
                matriz[i, j] = distancia
    return matriz

def parse_coordinates(coord_string):
    lines = coord_string.strip().split('\n')
    coordinates = []
    
    for line in lines:
        parts = line.split()
        if len(parts) >= 3:
            # Ignora el índice (parts[0]) y toma x, y
            x = float(parts[1])
            y = float(parts[2])
            coordinates.append([x, y])
    
    return np.array(coordinates)


def parse_coordinates_with_index(coord_string):
    lines = coord_string.strip().split('\n')
    coordinates = {}
    
    for line in lines:
        parts = line.split()
        if len(parts) >= 3:
            idx = int(parts[0])
            x = float(parts[1])
            y = float(parts[2])
            coordinates[idx] = (x, y)
    
    return coordinates


coord_string = """1 981036 508139
2 534120 -42453
3 577878 -43732
4 532890 -96645
5 205322 215891
6 225923 197950
7 69842 667632
8 391965 1054524
9 310065 -10714
10 247401 754523
11 217951 218350
12 443097 54051
13 47342 630935
14 317515 713679
15 301816 1021772
16 950864 332234
17 276433 725657
18 921801 410349
19 555508 67090
20 409959 379409
21 968097 540588
22 40089 721860
23 702011 527050
24 726191 326684
25 990428 196959
26 381890 1003805
27 409527 1056227
28 675609 496310
29 971071 188552
30 932494 818793
31 936083 384774
32 835076 517826
33 120444 663239
34 648516 395774
35 402323 126508
36 307839 57178
37 397333 987582
38 314281 949219
39 105042 667806
40 1006036 468020
41 473356 311656
42 970499 257334
43 919732 458332
44 1033956 436231
45 934265 314744
46 239142 55856
47 720304 525053
48 480764 1058084
49 970063 396578
50 543132 334794
51 755587 491352
52 975653 745618
53 272842 58331
54 537123 165900
55 519742 129315
56 35924 947451
57 1064442 490895
58 489393 117496
59 631320 277543
60 261674 961159
61 534617 58056
62 691689 512673
63 182654 715277
64 945838 459916
65 627821 -838
66 1022110 283893
67 458725 143747
68 273755 -10984
69 293760 805861
70 466598 160110
71 906179 264649
72 712619 535794
73 240847 212619
74 993782 930601
75 322034 925655
76 954600 443790
77 995817 521789
78 267943 -26353
79 674673 332544
80 978160 748015
81 353466 1077036
82 371788 950118
83 779223 446051
84 525136 311620
85 1026402 609181
86 619524 -3330
87 644232 440581
88 198821 272321
89 280990 298348
90 475893 278934
91 291897 964145
92 476091 102274
93 34538 935151
94 985493 331624
95 25533 991767
96 1029016 248202
97 1041034 983317
98 922880 836157
99 754748 378532
100 193676 209011
101 269511 991097
102 608351 334935
103 221344 712137
104 940795 808773
105 35503 903653
106 194163 -8394
107 459581 335048
108 331638 1096815
109 538796 317093
110 505069 123029
111 706191 481820
112 974314 819460
113 335170 808699
114 774079 491470
115 727757 567077
116 469054 308841
117 982345 808600
118 635739 329982
119 559782 199329
120 865983 362039
121 566229 32945
122 945355 443621
123 343074 1043145
124 456407 356580
125 930994 863608
126 465030 165426
127 585931 271316
128 78142 896258
129 228762 757017
130 641748 302745
131 265500 967350
132 -18619 985581
133 437681 78375
134 657303 473671
135 207311 190512
136 1039916 606173
137 501654 342980
138 808872 431227
139 979141 290493
140 962582 325713
141 858477 607859
142 682062 285319
143 1018123 948910
144 555686 23786
145 895287 454109
146 373296 947968
147 -3116 976012
148 617542 115270
149 735268 492611
150 954724 617777
151 565140 26652
152 892688 563248
153 911677 841211
154 1079810 800957
155 778264 555164
156 419974 135778
157 511106 982963
158 682826 550673
159 534554 150784
160 254767 754810
161 340163 932553
162 508592 312824
163 579508 296187
164 961560 301327
165 493862 175735
166 501386 266573
167 463909 88190
168 338390 671668
169 965235 921962
170 710505 507680
171 367928 96586
172 1061692 290085
173 577618 26586
174 568778 276180
175 120097 667734
176 439840 92005
177 400650 986098
178 944072 769857
179 604630 304795
180 933823 485086
181 336792 47017
182 984258 658894
183 665887 341226
184 683701 313080
185 286989 15656
186 727013 436681
187 196457 232311
188 489533 904759
189 4838 638626
190 964356 620951
191 14019 975847
192 1011610 457653
193 1086560 348419
194 331881 905996
195 446028 299319
196 989521 565952
197 638645 343723
198 80472 761743
199 918795 371845
200 962133 405576
201 90002 730359
202 1066231 519460
203 314455 717336
204 698977 548286
205 990152 861550
206 420156 1035929
207 989198 480008
208 1024997 244075
209 675765 277962
210 1017295 284449
211 279452 70873
212 66701 635082
213 799479 462913
214 359551 959225
215 -21508 941499
216 179606 816588
217 680220 537678
218 109416 697746
219 1020461 867072
220 264488 51021
221 513200 119016
222 324952 979758
223 -23037 907079
224 425793 1004271
225 245076 731150
226 732401 490047
227 495432 290024
228 863374 857586
229 1000845 453198
230 5802 937511
231 322488 718762
232 297064 940211
233 78039 176061
234 310707 17474
235 431057 917939
236 1012985 782917
237 910332 348187
238 1036911 806200
239 604167 14088
240 1034615 373033
241 595552 265288
242 480446 146778
243 968706 830827
244 520827 159727
245 927178 891801
246 58502 918647
247 678857 289512
248 921982 539806
249 1066895 310233
250 982152 537701
251 553647 90137
252 546523 252022
253 970347 920258
254 542786 244277
255 1038062 501176
256 939444 649000
257 755201 486107
258 245208 17631
259 859154 515363
260 928209 569207
261 228581 290039
262 898350 777460
263 486326 321618
264 354152 925489
265 307482 958761
266 920851 668651
267 96606 655604
268 926699 806400
269 748417 485823
270 633607 235913
271 520306 120787
272 259081 144892
273 459850 274123
274 145018 681646
275 959481 742510
276 -31358 952162
277 331686 1086172
278 107344 669849
279 1038959 454099
280 880225 607529
281 669490 506855
282 548257 296059
283 326970 746737
284 429285 1062179
285 975519 448528
286 611622 341592
287 989119 800767
288 558132 154408
289 560470 -6998
290 934941 858189
291 850650 352948
292 954289 573916
293 474903 332139
294 472412 180641
295 271736 832653
296 918600 797087
297 545895 277676
298 60914 739114
299 911842 481207
300 995987 513246
301 336244 924492
302 669624 367077
303 213113 317798
304 382186 966747
305 851876 331130
306 379917 905379
307 479603 310225
308 264587 696793
309 505738 308854
310 1005275 349543
311 11743 929818
312 966284 432460
313 66564 742265
314 985933 788152
315 177323 269057
316 582741 1622
317 1041728 969352
318 447075 133055
319 357224 1073600
320 939524 731450
321 980763 433554
322 466840 281154
323 208129 260745
324 990651 511078
325 875583 392312
326 566752 39284
327 649829 356055
328 583955 -22935
329 1055782 306326
330 220744 66433
331 1068535 307643
332 957576 969635
333 424155 668
334 582864 731
335 450704 1012748
336 736428 451426
337 700624 501219
338 594358 80877
339 1038313 825056
340 1030838 436629
341 462130 153079
342 415990 924813
343 231689 255900
344 364279 -43699
345 989301 332654
346 420978 975030
347 224229 -21641
348 999754 586633
349 662863 512705
350 808076 416004
351 491677 192175
352 6138 954238
353 16453 957178
354 244797 753540
355 1015830 948217
356 958908 326754
357 580726 30503
358 299497 80977
359 120877 663858
360 1020152 422262
361 94578 726847
362 611452 362851
363 91700 971621
364 922396 410703
365 407150 188306
366 988373 994165
367 252224 211268
368 1029211 318790
369 228228 675784
370 181963 160602
371 194151 204264
372 990429 616589
373 962485 471277
374 487027 48736
375 428212 364305
376 736395 465004
377 437231 106871
378 959325 867596
379 629268 270211
380 470712 43382
381 402693 1013043
382 405226 1028002
383 194476 210876
384 1007126 885952
385 1006388 538259
386 902672 642791
387 994285 638276
388 521655 191446
389 715231 318286
390 729198 445581
391 739110 510144
392 1043693 908389
393 440393 957757
394 646914 77788
395 701037 273839
396 978831 819659
397 859182 418430
398 971852 787831
399 269783 710141
400 737963 578273
401 484930 251860
402 500191 -26033
403 362059 68965
404 612083 543519
405 554854 268201
406 878413 471867
407 539006 1025381
408 245354 726275
409 945490 733405
410 151112 643610
411 819079 401742
412 239369 615866
413 93844 715303
414 654552 326167
415 559275 343566
416 1006204 947646
417 988530 916792
418 464115 303033
419 523173 100275
420 921151 812598
421 676588 297348
422 933932 531876
423 408939 843555
424 429721 903177
425 468369 64403
426 298552 1013038
427 706940 538562
428 780993 543894
429 211184 769048
430 -19602 939224
431 1011976 334905
432 -25612 921356
433 924623 947340
434 672420 269141
435 1024507 896037
436 266904 961713
437 132613 677948
438 875129 479594
439 1049423 235210
440 588992 53006
441 1078221 373636
442 550890 270379
443 956122 1038055
444 231228 167524
445 467163 230055
446 454650 1052608
447 996903 414772
448 940924 965838
449 1056149 295786
450 -32639 948889
451 311050 772121
452 965473 375774
453 582987 18222
454 297849 975299
455 886062 922681
456 125389 669051
457 137649 760563
458 499475 192284
459 1032876 941817
460 280443 72557
461 467677 274481
462 584334 333219
463 216596 112130
464 355392 316783
465 47737 937785
466 968865 419997
467 968345 900197
468 337832 85886
469 483020 26164
470 630749 18033
471 508742 242729
472 738072 552741
473 -42807 742616
474 214132 253225
475 427704 102739
476 196468 145775
477 328593 930881
478 676648 481141
479 985859 345756
480 586228 316703
481 241578 733792
482 142239 639607
483 262460 78923
484 1045599 878351
485 314906 713219
486 705527 573223
487 573839 9502
488 1020076 930750
489 402335 171357
490 234089 840628
491 604719 10667
492 471260 993914
493 699782 571009
494 803964 497264
495 981138 895940
496 264833 656457
497 205046 212685
498 547376 297596
499 939129 436355
500 276562 54902
501 424716 1056496
502 374272 338061
503 609493 377343
504 454903 383462
505 980879 445657
506 586741 11796
507 -66860 946391
508 226294 -19579
509 633795 201125
510 962085 418253
511 936941 390671
512 951558 612395
513 737989 286287
514 935538 621822
515 429226 1004615
516 190397 193917
517 527074 282489
518 396285 914521
519 551607 277715
520 354006 1036799
521 988606 579963
522 292451 90499
523 293468 937461
524 1021595 559791
525 140233 683418
526 475448 139665
527 704096 464113
528 939312 289768
529 562795 360371
530 264747 679787
531 732283 440709
532 904865 460315
533 880687 814777
534 1028738 564102
535 701344 585671
536 460729 1006780
537 17661 665446
538 924120 509961
539 893668 413430
540 724429 448985
541 1011477 852681
542 944828 1061237
543 281717 1074546
544 945987 620376
545 211889 212670
546 338351 993235
547 969541 826989
548 391960 997694
549 620243 361020
550 989319 913958
551 983241 224412
552 31448 1007200
553 472642 161804
554 3096 681954
555 846532 517406
556 720385 476030
557 901236 407240
558 231615 205337
559 323564 -14633
560 1006297 273107
561 959041 593009
562 927490 647326
563 667168 386980
564 63198 960864
565 447902 1011589
566 706462 496735
567 984033 396451
568 535890 376567
569 538048 -50553
570 724926 427909
571 1016020 923175
572 248641 1355
573 153124 652050
574 169397 161570
575 941971 380204
576 985670 802017
577 677055 329993
578 282891 982700
579 732561 479132
580 12023 907259
581 615106 340654
582 705497 450925
583 295221 907635
584 437884 368808
585 886759 823658
586 -1009 900487
587 674955 460347
588 634530 346286
589 142076 630144
590 127300 752001
591 961169 760362
592 733859 528201
593 685789 568701
594 911655 360648
595 660257 551875
596 -468 937668
597 370706 930168
598 430828 996317
599 465714 101740
600 943087 396383
601 929131 566287
602 625649 234331
603 925654 915305
604 991261 786323
605 687356 478890
606 258989 7413
607 215395 1004343
608 987715 553698
609 281449 53771
610 946583 603511
611 310449 719995
612 779078 472474
613 477278 57114
614 1056501 478555
615 1006854 618170
616 116475 708021
617 539650 122967
618 547597 11902
619 718327 480379
620 946877 571733
621 924351 330022
622 189682 670820
623 969343 849430
624 979579 542407
625 1035291 679060
626 490558 102790
627 328361 1072479
628 495265 15006
629 977943 877833
630 70214 708048
631 535826 -37128
632 997789 456905
633 997259 570659
634 1017941 490832
635 983613 420392
636 926340 401716
637 546465 13270
638 308807 935109
639 272709 739256
640 1017780 671686
641 779705 588491
642 932846 419379
643 411669 53004
644 1072392 859448
645 422565 987398
646 701179 522878
647 25704 903092
648 1010606 829382
649 1022936 850217
650 875726 328781
651 871149 581702
652 906435 280536
653 317997 54917
654 442621 153855
655 946788 638911
656 795330 472684
657 982007 805294
658 992720 315703
659 950304 532116
660 503723 322399
661 667818 300369
662 945726 473613
663 314187 765703
664 974429 301528
665 474524 121509
666 957654 468722
667 340458 950903
668 27376 840979
669 484975 24432
670 100835 697230
671 1040844 329988
672 936487 251273
673 350473 985367
674 447872 361398
675 35998 898159
676 430131 -46452
677 759022 405634
678 691853 309522
679 946798 691984
680 718965 500142
681 811686 577423
682 963928 321668
683 399467 -23317
684 601370 352014
685 321756 910244
686 966051 360943
687 800004 480282
688 862321 627290
689 459074 186439
690 944684 447163
691 515450 -7619
692 499971 199155
693 482378 108880
694 1015683 276266
695 776289 484559
696 642784 388059
697 357306 1022767
698 355571 1022950
699 705469 250661
700 99143 758382
701 539046 163668
702 910116 758870
703 970865 836094
704 987317 396579
705 187531 325360
706 -55457 984014
707 340464 971856
708 1056506 924297
709 492438 -5725
710 493090 36922
711 765498 522180
712 332241 902072
713 409431 960349
714 973283 270933
715 311128 -28096
716 364235 45159
717 585415 36684
718 1029023 684164
719 235270 736169
720 708564 515507
721 88648 720358
722 397266 173977
723 615650 45717
724 311391 2266
725 588785 374935
726 483250 361010
727 954790 611306
728 977133 519341
729 1043617 848664
730 460937 -58176
731 625325 17660
732 441303 308739
733 257737 689159
734 990228 319463
735 184916 220310
736 524859 174578
737 243218 779732
738 949909 834209
739 -3390 971979
740 745598 392546
741 887937 674470
742 38110 1005395
743 778794 450468
744 872346 405435
745 1038628 984843
746 586318 94344
747 893464 461786
748 919372 368319
749 1008882 911406
750 925592 254331
751 512901 76487
752 147433 681941
753 154332 729689
754 195225 246717
755 931133 781389
756 721444 512772
757 1005945 529653
758 572331 127874
759 982349 984363
760 882545 360660
761 52812 655492
762 652110 389167
763 900140 399150
764 416896 948028
765 30162 1071796
766 426808 882098
767 1081531 760691
768 347819 911147
769 1008862 484618
770 683676 273310
771 428352 1016931
772 220389 186688
773 950373 985247
774 986560 926213
775 474152 282569
776 899500 802132
777 904784 412284
778 282410 679653
779 361694 943523
780 1005649 914192
781 931284 886615
782 187218 260511
783 352297 948683
784 368108 994487
785 75677 743816
786 1003840 256874
787 962545 871498
788 743979 530985
789 680366 388903
790 84928 639998
791 445228 118645
792 354073 872216
793 532794 214994
794 339629 968355
795 -7351 896931
796 762244 519684
797 944551 580456
798 820477 530979
799 460043 68606
800 900385 428005
801 83117 722049
802 349317 802335
803 442937 47268
804 172669 181061
805 169754 262994
806 928093 397693
807 316341 1011443
808 150509 218739
809 334349 139
810 352228 1014244
811 884465 414478
812 -1710 971566
813 440031 60986
814 580725 52013
815 455397 72979
816 294417 114808
817 977455 518526
818 596709 -15476
819 760043 505809
820 -12335 860108
821 744488 503129
822 946945 785720
823 605785 68128
824 911400 835499
825 896611 521615
826 977624 796432
827 296205 66839
828 695886 286002
829 943452 487818
830 930102 501223
831 459242 199000
832 951298 376897
833 266151 771467
834 371983 1063470
835 983827 223334
836 929420 264511
837 120587 678257
838 540368 238586
839 479812 302306
840 707664 486137
841 626603 371290
842 979014 669835
843 -41255 855960
844 674683 582291
845 319656 146164
846 380686 73443
847 616430 236955
848 220857 714539
849 262205 729044
850 516732 171776
851 212889 202133
852 952026 905293
853 357481 971257
854 970806 393994
855 736611 504924
856 351535 706086
857 807698 507290
858 973108 578200
859 638119 260212
860 516292 374529
861 21469 966722
862 1031106 832736
863 491449 223659
864 1029297 480592
865 927124 334453
866 6193 910377
867 167224 691113
868 782967 501808
869 150856 706386
870 229431 700987
871 960562 523857
872 187356 772891
873 44426 636871
874 883633 873681
875 292732 56917
876 1041102 448822
877 634243 43429
878 973132 815365
879 589981 266128
880 515390 187116
881 104334 628220
882 930933 687697
883 450418 38658
884 932379 564517
885 720955 526394
886 1000565 801054
887 434311 4843
888 522056 34977
889 448479 -9391
890 624332 -6840
891 31184 989240
892 903356 511932
893 1013770 481816
894 642717 317627
895 -128049 938535
896 950864 474256
897 454526 361210
898 465537 1034177
899 539150 284629
900 1025430 456081
901 270312 220371
902 722401 342889
903 544331 -62551
904 764125 469810
905 691565 533430
906 678488 536384
907 939684 878762
908 732116 577970
909 503352 412014
910 602628 60605
911 91569 616426
912 509668 17170
913 80611 1040930
914 982004 503921
915 557669 16852
916 993434 909979
917 960238 294057
918 81477 1011634
919 581260 352400
920 520607 46851
921 677991 501342
922 224003 29895
923 517623 348081
924 445689 97500
925 692681 553133
926 226268 643936
927 76803 611857
928 114442 669869
929 523291 36705
930 919756 474725
931 855250 320217
932 91707 700865
933 477428 264380
934 528937 13390
935 720723 492863
936 471015 121757
937 962521 735638
938 601802 306710
939 253366 765380
940 763790 486237
941 173215 228150
942 911291 784897
943 653289 435846
944 757300 427229
945 326009 899531
946 49579 994405
947 518363 20767
948 624640 334003
949 477789 925461
950 437175 133612
951 632951 312899
952 948477 583247
953 893520 471855
954 245729 198583
955 510819 308837
956 517765 7553
957 357859 983251
958 667482 276121
959 983726 884744
960 313011 1062109
961 -75489 969207
962 443034 166265
963 316916 968159
964 984228 650226
965 775882 394219
966 531154 79184
967 993413 605080
968 424139 35597
969 213934 726127
970 975011 280267
971 1003439 522486
972 317064 969880
973 330573 979271
974 752757 506388
975 114886 677219
976 443651 395082
977 865120 334131
978 514730 337115
979 971838 295842
980 1050575 262706
981 393246 1018921
982 694154 518752
983 545841 13000
984 237960 772181
985 502911 52466
986 895631 833752
987 891249 380318
988 955040 963510
989 709160 533608
990 729378 434347
991 797169 329378
992 890134 413658
993 233217 169506
994 958598 392349
995 759853 414015
996 907200 300490
997 951396 473596
998 460030 374534
999 543108 65803
1000 471287 119659"""